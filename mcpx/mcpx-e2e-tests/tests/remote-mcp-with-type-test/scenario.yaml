# Verifies that a remote MCP server with a streamable-http type field works correctly
name: "Remote MCP Server with streamable-http type field"
image: us-central1-docker.pkg.dev/prj-common-442813/mcpx/mcpx:v0.2.12-bb78753
env: {}
dependentContainers: []
configMount: config
cleanConfigMount: false

verboseOutput: false


steps:
  - name: Load Control-Plane UI
    kind: browser
    toolName: browser_navigate
    payload:
      url: http://localhost:5173
    expected:
      mode: regex
      value: "Ran Playwright code"

  - name: Wait for notion node to render
    kind: browser
    toolName: browser_evaluate
    payload:
      function: |
        () => new Promise((resolve, reject) => {
          const deadline = Date.now() + 20000; // 20s
          (function poll() {
            const root = document.querySelector('main') || document.body;
            const node =
              Array.from(root.querySelectorAll('h3,[role="heading"],.react-flow__node,[data-id]'))
                .find(el => /(^|\s)notion(\s|$)/i.test((el.textContent || '')));
            if (node) return resolve('notion-tile-ready');
            if (Date.now() > deadline) return reject('notion-tile-timeout');
            setTimeout(poll, 200);
          })();
        })
    expected:
      mode: contains
      value: "notion-tile-ready"